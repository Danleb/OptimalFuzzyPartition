<Window x:Class="OptimalFuzzyPartition.View.AlgorithmSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:v="clr-namespace:OptimalFuzzyPartition.View"
        xmlns:c="clr-namespace:OptimalFuzzyPartition.View.Converter"
        xmlns:vr="clr-namespace:OptimalFuzzyPartition.View.ValidationRules"
        xmlns:vm="clr-namespace:OptimalFuzzyPartition.ViewModel"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="557"
        Width="1387"
        MinHeight="720"
        SizeToContent ="Height"
        WindowStartupLocation="CenterScreen"
        Closing="AlgorithmSettingsWindow_OnClosing"
        >

    <Window.InputBindings>
        <KeyBinding Command="{Binding NewConfig}" Key="N" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SaveConfig}" Key="S" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding LoadConfig}" Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding CreatePartitionCommand}" Key="F5"/>
    </Window.InputBindings>

    <Window.DataContext>
        <vm:AlgorithmSettingsViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <c:DensityConverter x:Key="DensityConverter"/>
            <c:MetricsConverter x:Key="MetricsConverter"/>
            <c:CenterDataConverter x:Key="CenterDataConverter"/>
            <c:VisibilityConverter x:Key="VisibilityConverter"/>
            <c:CultureForCheckboxConverter x:Key="CultureForCheckboxConverter"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="{DynamicResource MenuConfiguration}">
                    <MenuItem Header="New" InputGestureText="Ctrl+N" Command="{Binding NewConfig}"/>
                    <MenuItem Header="Open" InputGestureText="Ctrl+O" Command="{Binding LoadConfig}"/>
                    <MenuItem Header="Save" InputGestureText="Ctrl+S" Command="{Binding SaveConfig}" IsEnabled="{Binding IsConfigFileChosen}"/>
                    <MenuItem Header="Save as..." Command="{Binding SaveAsConfig}"/>
                </MenuItem>
                <MenuItem Header="{DynamicResource MenuLanguage}">
                    <MenuItem Header="English" Command="{Binding SwitchToEnglish}" IsCheckable="True" IsChecked="{Binding CurrentCulture, Converter={StaticResource CultureForCheckboxConverter}, ConverterParameter='en', Mode=OneWay}"/>
                    <MenuItem Header="Ukrainian" Command="{Binding SwitchToUkrainian}" IsCheckable="True" IsChecked="{Binding CurrentCulture, Converter={StaticResource CultureForCheckboxConverter}, ConverterParameter='uk', Mode=OneWay}"/>
                    <MenuItem Header="Russian" Command="{Binding SwitchToRussian}" IsCheckable="True" IsChecked="{Binding CurrentCulture, Converter={StaticResource CultureForCheckboxConverter}, ConverterParameter='ru', Mode=OneWay}"/>
                </MenuItem>
                <MenuItem Header="{DynamicResource MenuTheme}">
                    <MenuItem Header="Light" IsCheckable="True" IsChecked="False"/>
                    <MenuItem Header="Dark" IsCheckable="True" IsChecked="False"/>
                </MenuItem>
                <MenuItem Header="{DynamicResource MenuAbout}" Command="{Binding AboutCommand}"/>
            </Menu>

            <StackPanel DockPanel.Dock="Bottom" Orientation="Vertical">
                <Separator/>
                <StackPanel Orientation="Horizontal">
                    <Button Margin="5" Padding="5" Content="{DynamicResource BuildPartition}" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding CreatePartitionCommand}"/>
                </StackPanel>
                <!--<Label Content="State: " VerticalAlignment="Center"/>-->
                <!--<Label Content="Warning: Partition with custom metrics/density function will be calculated on CPU. It may take a lot of time for grid bigger than 32x32." VerticalAlignment="Center" Background="{x:Null}" Foreground="#FFFF8500" FontWeight="Bold"/>-->
            </StackPanel>

            <ScrollViewer>
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical">
                        <Label Content="{DynamicResource SpaceSettings}" FontWeight="Bold"></Label>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Label Content="{DynamicResource EnterMinX}"></Label>
                            <TextBox Style="{StaticResource TextBoxStyle}">
                                <TextBox.Resources>
                                    <vr:BindingProxy x:Key="Proxy" Data="{Binding}"></vr:BindingProxy>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding Path="MinX" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vr:CornerPositionValidationRule CornerType="MinCorner">
                                                <vr:CornerPositionValidationRule.Wrapper>
                                                    <vr:CornerPositionWrapper AnotherCornerValue="{Binding Data.MaxX, Source={StaticResource Proxy}}"></vr:CornerPositionWrapper>
                                                </vr:CornerPositionValidationRule.Wrapper>
                                            </vr:CornerPositionValidationRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>

                            <Label Content="{DynamicResource EnterMinY}"></Label>
                            <TextBox Style="{StaticResource TextBoxStyle}">
                                <TextBox.Resources>
                                    <vr:BindingProxy x:Key="Proxy" Data="{Binding}"></vr:BindingProxy>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding Path="MinY" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vr:CornerPositionValidationRule CornerType="MinCorner">
                                                <vr:CornerPositionValidationRule.Wrapper>
                                                    <vr:CornerPositionWrapper AnotherCornerValue="{Binding Data.MaxY, Source={StaticResource Proxy}}"></vr:CornerPositionWrapper>
                                                </vr:CornerPositionValidationRule.Wrapper>
                                            </vr:CornerPositionValidationRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Label Content="{DynamicResource EnterMaxX}"></Label>
                            <TextBox Style="{StaticResource TextBoxStyle}">
                                <TextBox.Resources>
                                    <vr:BindingProxy x:Key="Proxy" Data="{Binding}"></vr:BindingProxy>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding Path="MaxX" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vr:CornerPositionValidationRule CornerType="MaxCorner">
                                                <vr:CornerPositionValidationRule.Wrapper>
                                                    <vr:CornerPositionWrapper AnotherCornerValue="{Binding Data.MinX, Source={StaticResource Proxy}}" />
                                                </vr:CornerPositionValidationRule.Wrapper>
                                            </vr:CornerPositionValidationRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>

                            <Label Content="{DynamicResource EnterMaxY}"></Label>
                            <TextBox Style="{StaticResource TextBoxStyle}">
                                <TextBox.Resources>
                                    <vr:BindingProxy x:Key="Proxy" Data="{Binding}"></vr:BindingProxy>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding Path="MaxY" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vr:CornerPositionValidationRule CornerType="MaxCorner">
                                                <vr:CornerPositionValidationRule.Wrapper>
                                                    <vr:CornerPositionWrapper AnotherCornerValue="{Binding Data.MinY, Source={StaticResource Proxy}}"></vr:CornerPositionWrapper>
                                                </vr:CornerPositionValidationRule.Wrapper>
                                            </vr:CornerPositionValidationRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Label Content="{DynamicResource EnterSegmentsX}"></Label>
                            <TextBox Style="{StaticResource TextBoxStyle}">
                                <TextBox.Text>
                                    <Binding Path="SegmentsCountX" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vr:NumberValidationRule/>
                                            <vr:GridSizeValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>

                            <Label Content="{DynamicResource EnterSegmentsY}"></Label>
                            <TextBox Style="{StaticResource TextBoxStyle}">
                                <TextBox.Text>
                                    <Binding Path="SegmentsCountY" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vr:NumberValidationRule/>
                                            <vr:GridSizeValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <Label Content="{DynamicResource DensityFunction}"></Label>
                        <StackPanel Orientation="Horizontal">
                            <ComboBox ItemsSource="{Binding DensityTypes}" SelectedItem="{Binding DensityType}" Margin="5" MinWidth="100" Name="DensityCombobox">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource DensityConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <Label Content="{DynamicResource DistanceFunction}"></Label>
                        <StackPanel Orientation="Horizontal">
                            <ComboBox ItemsSource="{Binding MetricsTypes}" SelectedItem="{Binding MetricsType}" Margin="5" MinWidth="100" Name="MetricsCombobox">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource MetricsConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <Label Content="{DynamicResource CentersSettings}" FontWeight="Bold"></Label>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{DynamicResource CentersCount}"></Label>

                            <TextBox Style="{StaticResource TextBoxStyle}" v:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text">
                                <TextBox.Text>
                                    <Binding Path="CentersCount" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vr:PositiveIntValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <CheckBox IsChecked="{Binding IsCentersPlacingTask}" Content="{DynamicResource TaskWithCentersPlacing}" Margin="5"></CheckBox>

                        <StackPanel>
                            <!--Visibility="{Binding ShowCentersCoordinates}">-->
                            <Label Content="{DynamicResource CentersCoordinates}"></Label>
                            <DataGrid Margin="5" HorizontalAlignment="Left" ItemsSource="{Binding Path=CenterDatas, Converter={StaticResource CenterDataConverter}}" CanUserAddRows="False" CanUserSortColumns="False" AutoGenerateColumns="False" d:DataContext="{d:DesignInstance v:CenterDataView}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{DynamicResource CenterNumber}" IsReadOnly="True" Binding="{Binding CenterNumber}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{DynamicResource CoordinateX}" IsReadOnly="false" Binding="{Binding ValueX}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{DynamicResource CoordinateY}" IsReadOnly="{Binding IsPositionCellReadonly}" Binding="{Binding ValueY}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{DynamicResource AdditiveCoefficient}" IsReadOnly="False" Binding="{Binding CoefficientA}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="{DynamicResource MultiplicativeCoefficient}" IsReadOnly="False" Binding="{Binding CoefficientW}"></DataGridTextColumn>
                                    <!--<DataGridCheckBoxColumn Header="Фіксований центр?" Visibility="Visible" IsReadOnly="False" Binding="{Binding IsFixedCenter}"></DataGridCheckBoxColumn>-->
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    </StackPanel>

                    <StackPanel Orientation="Vertical">
                        <Label Content="{DynamicResource SquareIntegrationSettings}" FontWeight="Bold"></Label>
                        <Label Content="{DynamicResource GaussLegendreCoefCount}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}" >
                            <TextBox.Text>
                                <Binding Path="GaussLegendreIntegralOrder" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveIntValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource FixedFuzzyPartitionSettings}" FontWeight="Bold"></Label>

                        <Label Content="{DynamicResource GradientStepConstant}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="FixedPartitionGradientStep" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource StartPsiValue}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="FixedPartitionPsiStartValue" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:NumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource MinimalGradientValueIterationsStop}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="FixedPartitionGradientThreshold" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource MaxIterationsCount}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="FixedPartitionMaxIteration" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveIntValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    </StackPanel>

                    <StackPanel Orientation="Vertical" IsEnabled="{Binding IsCentersPlacingTask}">
                        <Label Content="{DynamicResource CentersPlacingSettings}" FontWeight="Bold"></Label>

                        <Label Content="{DynamicResource MaxIterationsCount}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="RAlgorithmMaxIterationsCount" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveIntValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource GradientDescentStartStep}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="InitialStepH0" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource MinCenterDiffToStop}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="CentersDeltaEpsilon" StringFormat="0.#################" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource SpaceStretchCoef}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="SpaceStretchFactor" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource IterationsCountToIncreaseStep}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="IterationsCountToIncreaseStep" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource StepIncreaseCoef}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="StepIncreaseMultiplier" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <Label Content="{DynamicResource StepDecreaseCoef}"></Label>
                        <TextBox Style="{StaticResource TextBoxStyle}">
                            <TextBox.Text>
                                <Binding Path="StepDecreaseMultiplier" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveNumberValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </DockPanel>
    </Grid>
</Window>