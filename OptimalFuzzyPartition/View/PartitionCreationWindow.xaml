<Window x:Class="OptimalFuzzyPartition.View.PartitionCreationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:view="clr-namespace:OptimalFuzzyPartition.View"
        xmlns:vm="clr-namespace:OptimalFuzzyPartition.ViewModel"
        xmlns:vr="clr-namespace:OptimalFuzzyPartition.View.ValidationRules"
        xmlns:c="clr-namespace:OptimalFuzzyPartition.View.Converter"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:PartitionCreationViewModel}"
        Title="{DynamicResource WindowTitleCreation}"
        Height="625" Width="800"
        MinHeight="600" MinWidth="800"
        Icon="/OptimalFuzzyPartition;component/OptimalFuzzyPartitionIcon.ico"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        >
    <Window.InputBindings>
        <KeyBinding Command="{Binding UpdatePartitionCommand}" Key="F5"/>
    </Window.InputBindings>

    <Window.Resources>
        <ResourceDictionary>
            <c:DensityConverter x:Key="DensityConverter"/>
            <c:MetricsConverter x:Key="MetricsConverter"/>
            <c:CenterDataConverter x:Key="CenterDataConverter"/>
            <c:VisibilityConverter x:Key="VisibilityConverter"/>
            <c:CultureForCheckboxConverter x:Key="CultureForCheckboxConverter"/>
            <c:TimePassedConverter x:Key="TimePassedConverter"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <DockPanel>
            <ScrollViewer>
                <StackPanel>
                    <TextBlock Margin="10,10,0,5">
                        <TextBlock Text="{DynamicResource TimePassed}"/>
                        <TextBlock Text="{Binding TimePassed, Converter={StaticResource TimePassedConverter}}"/>
                    </TextBlock>

                    <TextBlock Margin="10,0,0,5">
                        <TextBlock Text="{DynamicResource PerformedIterationsCount}"/>
                        <TextBlock Text="{Binding Path=PerformedIterationCount}"/>
                    </TextBlock>

                    <!--<DataGrid Margin="5" ItemsSource="{Binding CenterCoordinates}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Номер центру" IsReadOnly="True" Binding="{Binding Path=CenterNumber}"></DataGridTextColumn>
                            <DataGridTextColumn Header="X" IsReadOnly="True" Binding="{Binding Path=X}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Y" IsReadOnly="True" Binding="{Binding Path=Y}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>-->

                    <CheckBox x:Name="CheckBoxAlwaysShowInfo" Content="{DynamicResource AlwaysShowCentersInfo}" Margin="5" IsChecked="{Binding AlwaysShowCentersInfo}"></CheckBox>

                    <!--<Label Margin="5" Content="{Binding IterationNumberToInspect}" ContentStringFormat="Номер ітерації для дослідження: {0}"></Label>
                    <TextBox Margin="5" Width="70" HorizontalAlignment="Left">
                        <TextBox.Text>
                            <Binding Path="IterationNumberToInspect">

                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Slider Margin="5" Maximum="{Binding PerformedIterationCount}" Minimum="1"></Slider>-->

                    <CheckBox Margin="5" Content="{DynamicResource GrayscaleImage}" IsChecked="{Binding DrawGrayscale}"></CheckBox>

                    <CheckBox Margin="5" Content="{DynamicResource DrawWithMistrustCoef}" IsChecked="{Binding DrawWithMistrust}"></CheckBox>
                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding DrawWithMistrust}">
                        <Label Content="{DynamicResource MistrustsCoefficient}"></Label>
                        <TextBox VerticalAlignment="Center" MinWidth="50" Margin="5" Text="{Binding MistrustCoefficient}"></TextBox>
                    </StackPanel>
                    <Slider IsEnabled="{Binding  DrawWithMistrust}" Margin="5" Minimum="0" Maximum="1" Value="{Binding MistrustCoefficient}" TickPlacement="BottomRight" TickFrequency="0.01" LargeChange="0.1" IsSnapToTickEnabled="True"></Slider>

                    <CheckBox IsChecked="{Binding ShowGradientInfo}" Margin="5" Content="{DynamicResource ShowGradientData}" />
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <Label Content="{DynamicResource DigitsCount}"/>
                        <!--<TextBox Text="2" VerticalAlignment="Center" MinWidth="50"/>-->

                        <TextBox Style="{StaticResource TextBoxStyle}" MinWidth="50">
                            <TextBox.Text>
                                <Binding Path="PositionDigitsCount" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <vr:PositiveIntValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <Button Name="Button" Margin="5" Content="{DynamicResource UpdatePartition}" Command="{Binding UpdatePartitionCommand}"></Button>

                    <Separator Margin="5"/>

                    <!--<Button Margin="5" Content="Відкрити налаштування"></Button>-->

                    <!--"Значення цільового функціоналу: {0}"-->
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{DynamicResource TargetFunctionalValue}"></Label>
                        <TextBox Text="{Binding TargetFunctionalValue}" VerticalAlignment="Center" Margin="5" MinWidth="50" IsReadOnly="True"></TextBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="{DynamicResource DualFunctionalValue}"></Label>
                        <TextBox  Text="{Binding DualFunctionalValue}" VerticalAlignment="Center" Margin="5" MinWidth="50" IsReadOnly="True"></TextBox>
                    </StackPanel>

                    <!--<TextBox Margin="5" Text="{Binding StringFormat=Значення цільового функціоналу: {0}, Path=TargetFunctionalValue}" IsReadOnly="True"></TextBox>
                    -->
                    <!--ContentStringFormat="Значення двоїстого функціоналу: {0}"-->
                    <!--
                    <TextBox Margin="5" Text="{Binding DualFunctionalValue}" IsReadOnly="True"></TextBox>-->

                    <CheckBox Margin="5" Content="{DynamicResource SelectPathManually}" VerticalAlignment="Center" IsChecked="{Binding IsManualSavePathEnabled}"></CheckBox>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="{DynamicResource Path}" VerticalAlignment="Center"></Label>
                        <TextBox Grid.Column="1" Text="{Binding PartitionImageSavePath}" VerticalAlignment="Center" MinWidth="150" IsReadOnly="True"></TextBox>
                        <Button Grid.Column="2" HorizontalAlignment="Right" Margin="5" Content="{DynamicResource SelectPath}" VerticalAlignment="Center" Command="{Binding ChoosePartitionImageSavePathCommand}" IsEnabled="{Binding IsManualSavePathEnabled}"></Button>
                    </Grid>

                    <Button Margin="5" Content="{DynamicResource SaveImage}" Command="{Binding SavePartitionImageCommand}"></Button>

                    <!--<Button Margin="5" Content="Save partition data"/>-->

                    <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Margin="5" Content="&lt;&lt;" Padding="5"/>
                        <Button Margin="5" Content="&lt;" Padding="5"/>
                        <Label Content="1/15" VerticalAlignment="Center"/>
                        <Button Margin="5" Content="&gt;" Padding="5"/>
                        <Button Margin="5" Content="&gt;&gt;"  Padding="5"/>
                    </StackPanel>-->

                </StackPanel>
            </ScrollViewer>

            <!--<TabControl>
                <TabItem Header="Image">
                    
                </TabItem>
                <TabItem Header="Table">
                    
                </TabItem>
            </TabControl>-->
            
            <Viewbox>
                <view:UnityWindowHost x:Name="UnityWindowHost" Width="{Binding PartitionWidth}" Height="{Binding PartitionHeight}"/>
            </Viewbox>            
            
        </DockPanel>
    </Grid>
</Window>